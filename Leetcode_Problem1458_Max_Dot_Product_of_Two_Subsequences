int max(int x, int y)
{
    return (x > y) ? x : y;
}
int maxDotProduct(int* nums1, int n1, int* nums2, int n2){
    if (n1 < n2) // for less space, interchange nums1 & nums2
        return maxDotProduct(nums2, n2, nums1, n1);
    int dp[2][501];
    #pragma unroll
    for(register int i=0; i<2; i++)
        for(register int j=0; j<=500; j++)
            dp[i][j]=INT_MIN;// minus numbers cannot use memset

    int res=INT_MIN;
    #pragma unroll
    for(register int i=n1-1; i>=0; i--){
        for(register int j=n2-1; j>=0; j--){
            register int x=nums1[i]*nums2[j], tmp=dp[i&1][j];
            tmp=max(tmp, x);
            tmp=max(tmp, x+(i+1<n1 && j+1<n2 ? dp[(i+1)&1][j+1]:0));
            tmp=max(tmp, dp[i&1][(j+1)]);
            dp[i&1][j]=max(tmp, dp[(i+1)&1][j]);
            res=max(res, dp[i&1][j]);
        }
    }
    return res;
}
